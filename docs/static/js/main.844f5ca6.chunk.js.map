{"version":3,"sources":["utils/chains.ts","config/constants.ts","layouts/common.tsx","pages/home/index.tsx","pages/404/index.tsx","themes/colors.ts","components/link/index.tsx","utils/web3.ts","components/navlink/index.tsx","utils/box.ts","components/web3/index.tsx","themes/index.ts","themes/styles.ts","themes/foundations/borders.ts","themes/components/button.ts","themes/components/link.ts","themes/components/popover.ts","themes/components/container.ts","themes/components/table.ts","themes/components/modal.ts","components/header/index.tsx","components/footer/index.tsx","i18n.ts","components/translate/index.tsx","api/query/queryClient.ts","utils/ui.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","utils/utilities.ts"],"names":["supportedChains","name","short_name","chain","network","chain_id","network_id","rpc_url","native_currency","symbol","decimals","contractAddress","balance","ChainId","Layout","children","pt","px","Page","title","obj","NLink","props","t","useTranslation","path","active","bordered","linkProps","restStyles","borderBottom","content","height","width","borderRadius","position","backgroundColor","colors","primary","left","bottom","transform","fontSize","_hover","color","as","RouterLink","to","_after","NAV_MAP","web3","NavLink","location","useLocation","Object","keys","map","pathname","search","bgSize","fontWeight","marginRight","initWeb3","provider","Web3","eth","extend","methods","call","outputFormatter","utils","hexToNumber","getProfile","address","a","Box","Error","profile","openBox","syncCallback","onSyncDone","INITIAL_STATE","fetching","connected","chainId","networkId","assets","showModal","pendingRequest","result","Web3Com","globalStore","useState","appState","web3Modal","curAddress","resetApp","currentProvider","close","clearCachedProvider","setState","getBoxProfile","Promise","resolve","reject","subscribeProvider","on","accounts","chainIdVal","net","getId","chainIdRes","onConnect","connect","getAccounts","useEffect","cachedProvider","Web3Modal","getChainData","cacheProvider","providerOptions","flex","display","justifyContent","emoji","ellipseAddress","size","onClick","overrides","config","initialColorMode","useSystemColorMode","styles","global","borders","components","Button","baseStyle","defaultProps","variants","Link","textDecoration","_focus","boxShadow","Popover","padding","menu","popper","body","Container","maxWidth","paddingX","Table","Modal","extendTheme","Header","sticky","history","useHistory","account","api","justify","themes","bgColor","top","right","alignItems","mr","push","Footer","flexWrap","paddingBottom","maxW","minW","mt","i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","item","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","debug","bind","fallback","I18nextProvider","i18n","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","isWindow","undefined","window","getScroll","target","method","Document","documentElement","ownerDocument","easeInOutCubic","b","c","d","cc","require","ControlledLayout","React","y","options","getContainer","callback","duration","container","scrollTop","startTime","Date","now","frameFunc","time","nextScrollTop","scrollTo","pageXOffset","HTMLDocument","constructor","raf","exact","strict","component","Home","NotFound","App","QueryClientProvider","client","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","slice","chainData","filter","API_KEY","process","REACT_APP_INFURA_ID","includes","rpcUrl","replace"],"mappings":"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","file":"static/js/main.844f5ca6.chunk.js","sourcesContent":["import { IChainData } from './types';\n\nconst supportedChains: IChainData[] = [\n  {\n    name: 'Ethereum Mainnet',\n    short_name: 'eth',\n    chain: 'ETH',\n    network: 'mainnet',\n    chain_id: 1,\n    network_id: 1,\n    rpc_url: 'https://mainnet.infura.io/v3/%API_KEY%',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Ethereum Ropsten',\n    short_name: 'rop',\n    chain: 'ETH',\n    network: 'ropsten',\n    chain_id: 3,\n    network_id: 3,\n    rpc_url: 'https://ropsten.infura.io/v3/%API_KEY%',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Ethereum Rinkeby',\n    short_name: 'rin',\n    chain: 'ETH',\n    network: 'rinkeby',\n    chain_id: 4,\n    network_id: 4,\n    rpc_url: 'https://rinkeby.infura.io/v3/%API_KEY%',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Ethereum Görli',\n    short_name: 'gor',\n    chain: 'ETH',\n    network: 'goerli',\n    chain_id: 5,\n    network_id: 5,\n    rpc_url: 'https://goerli.infura.io/v3/%API_KEY%',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'RSK Mainnet',\n    short_name: 'rsk',\n    chain: 'RSK',\n    network: 'mainnet',\n    chain_id: 30,\n    network_id: 30,\n    rpc_url: 'https://public-node.rsk.co',\n    native_currency: {\n      symbol: 'RSK',\n      name: 'RSK',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Ethereum Kovan',\n    short_name: 'kov',\n    chain: 'ETH',\n    network: 'kovan',\n    chain_id: 42,\n    network_id: 42,\n    rpc_url: 'https://kovan.infura.io/v3/%API_KEY%',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Ethereum Classic Mainnet',\n    short_name: 'etc',\n    chain: 'ETC',\n    network: 'mainnet',\n    chain_id: 61,\n    network_id: 1,\n    rpc_url: 'https://ethereumclassic.network',\n    native_currency: {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'POA Network Sokol',\n    short_name: 'poa',\n    chain: 'POA',\n    network: 'sokol',\n    chain_id: 77,\n    network_id: 77,\n    rpc_url: 'https://sokol.poa.network',\n    native_currency: {\n      symbol: 'POA',\n      name: 'POA',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'POA Network Core',\n    short_name: 'skl',\n    chain: 'POA',\n    network: 'core',\n    chain_id: 99,\n    network_id: 99,\n    rpc_url: 'https://core.poa.network',\n    native_currency: {\n      symbol: 'POA',\n      name: 'POA',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'xDAI Chain',\n    short_name: 'xdai',\n    chain: 'POA',\n    network: 'dai',\n    chain_id: 100,\n    network_id: 100,\n    rpc_url: 'https://dai.poa.network',\n    native_currency: {\n      symbol: 'xDAI',\n      name: 'xDAI',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Callisto Mainnet',\n    short_name: 'clo',\n    chain: 'callisto',\n    network: 'mainnet',\n    chain_id: 820,\n    network_id: 1,\n    rpc_url: 'https://clo-geth.0xinfra.com/',\n    native_currency: {\n      symbol: 'CLO',\n      name: 'CLO',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n  {\n    name: 'Binance Smart Chain',\n    short_name: 'bsc',\n    chain: 'smartchain',\n    network: 'mainnet',\n    chain_id: 56,\n    network_id: 56,\n    rpc_url: 'https://bsc-dataseed1.defibit.io/',\n    native_currency: {\n      symbol: 'BNB',\n      name: 'BNB',\n      decimals: '18',\n      contractAddress: '',\n      balance: '',\n    },\n  },\n];\n\nexport default supportedChains;\n","/* eslint-disable */\nexport const NAV_MAP: Record<string, string> = {\n  'nav.home': '/',\n};\n\nexport enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  BSC_TESTNET = 97,\n  XDAI = 100,\n}\n\n// export const CONTRACT: any = {\n//   [ChainId.XDAI]: '',\n//   [ChainId.RINKEBY]: '0xd5aF258Ed0FaA07f2dd659c440Bba53C96f8b4d1',\n// };\n\n// export const TOKEN: any = {\n//   [ChainId.XDAI]: '',\n//   [ChainId.RINKEBY]: '0xE84e5E9764Cc40c72761B173981B593999F2f71D',\n// };\n\nexport const POINT_PRECISION = 100000000;\nexport const TOKEN_PERCISION = 1000000000000000000;\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\n// import { useTranslation } from 'react-i18next';\n\ninterface Props {\n  children: React.ReactNode;\n  title: string;\n}\n\nconst Layout = ({ children }: Props) => {\n  // const { t } = useTranslation();\n  return (\n    <Box pt={20} px={8}>\n      {children}\n    </Box>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n// import { groupBy } from 'ramda';\n// import { Container, Button, Center, Stack, StackDivider } from '@chakra-ui/react';\n// import { useTranslation } from 'react-i18next';\n// import { useQuery } from 'react-query';\n// import { globalStore } from 'rekv';\nimport CommLayout from '../../layouts/common';\n// import {\n\n// } from '../../api/contracts';\n// import { useAssetsQuery } from '../../api/query';\n\nconst Page = () => {\n  // const { data: assetsData, isLoading, error, refetch } = useAssetsQuery();\n  // FIXME: Add type instead of any\n  // const {  } = store.useState('assets', 'filteredAssets');\n\n  // const { t } = useTranslation();\n\n  // const { account } = globalStore.useState('account');\n\n  // const [stickyFilter] = useState(false);\n\n  // Update filters when mount\n  // useEffect(() => {\n\n  // }, []);\n\n  return <CommLayout title=\"title.home\">Home</CommLayout>;\n};\n\nexport default Page;\n","import React from 'react';\nimport CommLayout from '../../layouts/common';\n\nconst Page = () => {\n  return <CommLayout title=\"title.home\">404</CommLayout>;\n};\n\nexport default Page;\n","const obj = {};\n\nexport default obj;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { Text, Link, HTMLChakraProps, LinkProps } from '@chakra-ui/react';\nimport React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport colors from '../../themes/colors';\n\nexport interface NLinkProps extends HTMLChakraProps<'p'> {\n  path: string;\n  title: string;\n  active?: boolean;\n  bordered?: boolean;\n  linkProps?: LinkProps;\n}\n\nconst NLink: FC<NLinkProps> = (props) => {\n  const { t } = useTranslation();\n  const { path, title, active = false, bordered = false, linkProps, ...restStyles } = props;\n\n  const borderBottom = {\n    content: '\" \"',\n    height: 1,\n    width: '80%',\n    borderRadius: 3,\n    position: 'absolute',\n    backgroundColor: colors.primary,\n    left: '50%',\n    bottom: -2,\n    transform: 'translate(-50%, -50%)',\n  };\n\n  return (\n    <Text\n      fontSize={16}\n      _hover={{\n        color: colors.primary,\n      }}\n      position=\"relative\"\n      {...restStyles}\n    >\n      <Link\n        as={RouterLink}\n        key={title}\n        to={path}\n        color={active ? colors.primary : ''}\n        _after={active && bordered ? borderBottom : {}}\n        {...linkProps}\n      >\n        {t(title)}\n      </Link>\n    </Text>\n  );\n};\n\nexport default NLink;\n","import Web3 from 'web3';\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport { AddressZero } from '@ethersproject/constants';\nimport { getAddress } from '@ethersproject/address';\nimport JSBI from 'jsbi';\n\nimport { ChainId } from '../config/constants';\n\nexport type BigintIsh = JSBI | bigint | string;\n\nlet web3: any;\n// const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// // account is optional\n// export function getProvider(): Web3Provider {\n//   return provider;\n// }\n\n// // account is not optional\n// export function getSigner(account?: string): JsonRpcSigner {\n//   return getProvider().getSigner(account).connectUnchecked();\n// }\n\n// // account is optional\n// export function getProviderOrSigner(account?: string): Web3Provider | JsonRpcSigner {\n//   return account ? getSigner(account) : provider;\n// }\n\nexport const isAddress = (value: any): string | false => {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n};\n\n// account is optional\nexport const getContract = (address: string, ABI: any, account?: string) => {\n  // if (!isAddress(address) || address === AddressZero) {\n  //   throw Error(`Invalid 'address' parameter '${address}'.`);\n  // }\n  // return new Contract(address, ABI, getProviderOrSigner(account) as any)\n  // return new web3.eth.Contract(ABI, address);\n};\n\nexport function getWbe3() {\n  return web3;\n}\n\nexport const parseBigintIsh = (bigintIsh: BigintIsh): JSBI => {\n  /* eslint-disable */\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh);\n};\n\n// export const getFarmilandContractAddr = () => {\n//   const networkId = +window.ethereum.chainId;\n//   return FARMILAND[networkId];\n// };\n\n// export const getFarmContractAddr = () => {\n//   const networkId = +window.ethereum.chainId;\n//   return FARM[networkId];\n// };\n\nexport const initWeb3 = (provider: any) => {\n  web3 = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: 'chainId',\n        call: 'eth_chainId',\n        outputFormatter: web3.utils.hexToNumber,\n      },\n    ],\n  });\n\n  return web3;\n};\n\nexport const callContract = async (contract: any, method: string, args: any[], cbs?: any) => {\n  const accounts = await web3.eth.getAccounts();\n  const address = accounts[0];\n  return contract.methods[method](...args).call({ from: address }, (error: any, result: any) => {\n    if (error) {\n      cbs && cbs.error && cbs.error(result);\n      return Promise.reject(error);\n    }\n    cbs && cbs.error && cbs.error(result);\n    return Promise.resolve(result);\n  });\n};\n\nexport const writeContract = async (contract: any, method: string, args: any[], cbs?: any) => {\n  const accounts = await web3.eth.getAccounts();\n  const address = accounts[0];\n  return contract.methods[method](...args)\n    .send({ from: address })\n    .on('transactionHash', function (hash: string) {\n      cbs && cbs.ongoing && cbs.ongoing(hash);\n      console.log(hash);\n    })\n    .on('receipt', function (receipt: any) {\n      cbs && cbs.onBlock && cbs.onBlock(receipt);\n      console.log(receipt);\n    })\n    .on('confirmation', function (confirmationNumber: number, receipt: any) {\n      cbs && cbs.confirm && cbs.confirm(confirmationNumber, receipt);\n      console.log(confirmationNumber, receipt);\n      return Promise.resolve(receipt);\n    })\n    .on('error', function (error: any, receipt: any) {\n      cbs && cbs.error && cbs.error(error, receipt);\n      console.log(error, receipt);\n      return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport NLink from '../link';\nimport { NAV_MAP } from '../../config/constants';\n\nconst NavLink = () => {\n  const location = useLocation();\n\n  const renderLink = (title: string) => {\n    const path = NAV_MAP[title];\n    const routePath = location.pathname + location.search;\n    // TODO: Mess state...\n\n    const active = routePath === path;\n\n    return (\n      <NLink\n        title={title}\n        path={path}\n        active={active}\n        bgSize=\"cover\"\n        fontWeight=\"bold\"\n        marginRight={8}\n        bordered\n        key={title}\n      />\n    );\n  };\n\n  return <>{Object.keys(NAV_MAP).map(renderLink)}</>;\n};\n\nexport default NavLink;\n","/* eslint-disable */\nimport Box from '3box';\nimport { IBoxProfile } from './types';\n\nconst SPACE_ID = 'TEST_WEB3_APP';\n\n// const Box = typeof window !== 'undefined' && typeof window.Box !== 'undefined' ? window.Box : null;\n\nlet box: any | null = null;\n\nexport async function getProfile(address: string): Promise<IBoxProfile> {\n  if (!Box) {\n    throw new Error('Box library is not available in window');\n  }\n  const profile = await Box.getProfile(address);\n  return profile;\n}\n\nexport async function openBox(address: string, provider: any, syncCallback: any): Promise<any> {\n  if (!Box) {\n    throw new Error('Box library is not available in window');\n  }\n  box = await Box.openBox(address, provider);\n  box.onSyncDone(() => {\n    syncCallback();\n  });\n}\n\nexport async function setPublic(key: string, value: any) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  if (typeof value !== 'string') {\n    value = JSON.stringify(value);\n  }\n  await box.public.set(key, value);\n}\n\nexport async function getPublic(key: string) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  let result = await box.public.get(key);\n  try {\n    result = JSON.parse(result);\n  } catch (error) {\n    // ignore error\n  }\n  return result;\n}\n\nexport async function removePublic(key: string) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  await box.public.remove(key);\n}\n\nexport async function setPrivate(key: string, value: any) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  if (typeof value !== 'string') {\n    value = JSON.stringify(value);\n  }\n  await box.private.set(key, value);\n}\n\nexport async function getPrivate(key: string) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  let result = await box.private.get(key);\n  try {\n    result = JSON.parse(result);\n  } catch (error) {\n    // ignore error\n  }\n  return result;\n}\n\nexport async function removePrivate(key: string) {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  await box.private.remove(key);\n}\n\nlet space: any = null;\n\nexport async function openSpace() {\n  if (!box) {\n    throw new Error('Box is not open yet');\n  }\n  space = await box.openSpace(SPACE_ID);\n}\n\nexport async function setSpacePrivate(key: string, value: any) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  if (typeof value !== 'string') {\n    value = JSON.stringify(value);\n  }\n  await space.private.set(key, value);\n}\n\nexport async function getSpacePrivate(key: string) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  let result = await space.private.get(key);\n  try {\n    result = JSON.parse(result);\n  } catch (error) {\n    // ignore error\n  }\n  return result;\n}\n\nexport async function removeSpacePrivate(key: string) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  await space.private.remove(key);\n}\n\nexport async function setSpacePublic(key: string, value: any) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  if (typeof value !== 'string') {\n    value = JSON.stringify(value);\n  }\n  await space.public.set(key, value);\n}\n\nexport async function getSpacePublic(key: string) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  let result = await space.public.get(key);\n  try {\n    result = JSON.parse(result);\n  } catch (error) {\n    // ignore error\n  }\n  return result;\n}\n\nexport async function removeSpacePublic(key: string) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  await space.public.remove(key);\n}\n\nlet thread: any = null;\n\nexport async function joinThread(threadName: string) {\n  if (!space) {\n    throw new Error('Space is not open yet');\n  }\n  thread = await space.joinThread(threadName);\n}\n\nexport async function getThreadPosts() {\n  if (!thread) {\n    throw new Error('Thread is not open yet');\n  }\n  const posts = await thread.getPosts();\n  return posts;\n}\n\nexport async function postToThread(message: any) {\n  if (!thread) {\n    throw new Error('Thread is not open yet');\n  }\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n  await thread.post(message);\n}\n\nexport async function subscribeToThread(callback: any) {\n  if (!thread) {\n    throw new Error('Thread is not open yet');\n  }\n  thread.onUpdate(() => {\n    logMsg('THREAD UPDATE');\n    callback();\n  });\n}\n","import React, { useEffect } from 'react';\nimport { Box, Button, Text } from '@chakra-ui/react';\nimport { globalStore } from 'rekv';\nimport Web3Modal from 'web3modal';\n// import WalletConnectProvider from \"@walletconnect/web3-provider\";\n// import Fortmatic from \"fortmatic\";\n// import Torus from \"@toruslabs/torus-embed\";\n// import Authereum from \"authereum\";\n// import { Bitski } from \"bitski\";\nimport { initWeb3 } from '../../utils/web3';\nimport { IAppState, IBoxProfile } from '../../utils/types';\nimport { getChainData, ellipseAddress } from '../../utils/utilities';\nimport { openBox, getProfile } from '../../utils/box';\n\nconst INITIAL_STATE: IAppState = {\n  fetching: false,\n  address: '',\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null,\n};\n\nconst getProviderOptions = () => {\n  // other provider\n  // const providerOptions = {\n  //   walletconnect: {\n  //     package: WalletConnectProvider,\n  //     options: {\n  //       infuraId: process.env.REACT_APP_INFURA_ID\n  //     }\n  //   },\n  //   torus: {\n  //     package: Torus\n  //   },\n  //   fortmatic: {\n  //     package: Fortmatic,\n  //     options: {\n  //       key: process.env.REACT_APP_FORTMATIC_KEY\n  //     }\n  //   },\n  //   authereum: {\n  //     package: Authereum\n  //   },\n  //   bitski: {\n  //     package: Bitski,\n  //     options: {\n  //       clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n  //       callbackUrl: window.location.href + \"bitski-callback.html\"\n  //     }\n  //   }\n  // };\n  const providerOptions = {};\n  return providerOptions;\n};\n\nexport default function Web3Com() {\n  // const [chainId, setChainId] = useState(-1)\n  // const [state, setstate] = useState(INITIAL_STATE)\n\n  const { appState = INITIAL_STATE, profile = null } = globalStore.useState('appState', 'profile');\n  let { web3Modal } = globalStore.useState('web3Modal');\n  const { chainId, connected, address: curAddress } = appState;\n\n  const resetApp = async () => {\n    const { web3 } = appState;\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.close();\n    }\n    await web3Modal.clearCachedProvider();\n    globalStore.setState({ appState: INITIAL_STATE });\n  };\n\n  const getBoxProfile = async (address: string, provider: any): Promise<IBoxProfile> => {\n    /* eslint-disable */\n    return new Promise(async (resolve, reject) => {\n      try {\n        await openBox(address, provider, async () => {\n          const profile = await getProfile(address);\n          if (profile) {\n            globalStore.setState({ profile });\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const getNetwork = () => {\n    return getChainData(chainId).network;\n  };\n\n  const subscribeProvider = async (provider: any) => {\n    if (!provider.on) {\n      return;\n    }\n    provider.on('close', () => resetApp());\n    provider.on('accountsChanged', async (accounts: string[]) => {\n      await globalStore.setState({\n        appState: { ...appState, address: accounts[0], connected: true },\n        profile: null,\n      });\n      getBoxProfile(accounts[0], provider);\n      // await this.getAccountAssets();\n    });\n    provider.on('chainChanged', async (chainIdVal: number) => {\n      const { web3 } = appState;\n      const networkId = await web3.eth.net.getId();\n      await globalStore.setState({ appState: { ...appState, chainId: chainIdVal, networkId } });\n      // await this.getAccountAssets();\n    });\n\n    provider.on('networkChanged', async (networkId: number) => {\n      const { web3 } = appState;\n      const chainIdRes = await web3.eth.chainId();\n      await globalStore.setState({ appState: { ...appState, chainId: chainIdRes, networkId } });\n      // await this.getAccountAssets();\n    });\n  };\n\n  const onConnect = async () => {\n    const provider = await web3Modal.connect();\n\n    await subscribeProvider(provider);\n\n    const web3: any = initWeb3(provider);\n\n    const accounts = await web3.eth.getAccounts();\n\n    const address = accounts[0];\n\n    const networkId = await web3.eth.net.getId();\n\n    const chainIdRes = await web3.eth.chainId();\n\n    await globalStore.setState({\n      appState: {\n        web3,\n        provider,\n        connected: true,\n        address,\n        chainId: chainIdRes,\n        networkId,\n      },\n    });\n    getBoxProfile(address, provider);\n    // await this.getAccountAssets();\n  };\n\n  useEffect(() => {\n    if (web3Modal && web3Modal.cachedProvider) {\n      onConnect();\n      return;\n    }\n    web3Modal = new Web3Modal({\n      network: getNetwork(),\n      cacheProvider: true,\n      providerOptions: getProviderOptions(),\n    });\n    globalStore.setState({ web3Modal: web3Modal });\n  }, []);\n\n  return (\n    <Box as=\"div\" flex={1} display=\"flex\" justifyContent=\"center\" height=\"auto\">\n      {!connected ? (\n        <Button size=\"sm\" onClick={() => onConnect()}>\n          {' '}\n          Connect{' '}\n        </Button>\n      ) : (\n        <Box>\n          {profile && profile.name ? (\n            <Box>\n              {profile.name}\n              {profile.emoji}\n            </Box>\n          ) : (\n            <Box>{ellipseAddress(curAddress, 5)}</Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n}\n","// theme.js\nimport { extendTheme, ThemeOverride } from '@chakra-ui/react';\n\n// Global style overrides\nimport styles from './styles';\n\n// Foundational style overrides\nimport borders from './foundations/borders';\n\nimport colors from './colors';\n// Component style overrides\nimport Button from './components/button';\nimport Link from './components/link';\nimport Popover from './components/popover';\nimport Container from './components/container';\nimport Table from './components/table';\nimport Modal from './components/modal';\n\nconst overrides: ThemeOverride = {\n  colors,\n  // colorMode config\n  config: {\n    initialColorMode: 'dark',\n    useSystemColorMode: false,\n  },\n  styles, // global style\n  borders,\n  // Other foundational style overrides go here\n  components: {\n    Button,\n    Link,\n    Popover,\n    Container,\n    Table,\n    Modal,\n    // Other components go here\n  },\n};\n\nexport default extendTheme(overrides);\n","// import colors from './colors';\n\nconst obj = {\n  global: () => ({\n    // font\n    'html, body': {\n      // fontFamily: \"PingFangSC-Regular, PingFang SC;\",\n      width: '100%',\n      height: '100%',\n    },\n  }),\n};\n\nexport default obj;\n","const obj = {};\nexport default obj;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n// import colors from '../colors';\n\nconst Button: ComponentStyleConfig = {\n  baseStyle: {},\n\n  defaultProps: {\n    variants: 'default',\n  },\n};\n\nexport default Button;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n\nconst Link: ComponentStyleConfig = {\n  baseStyle: {\n    _hover: {\n      textDecoration: 'none',\n    },\n    _focus: {\n      boxShadow: 'none',\n    },\n  },\n};\n\nexport default Link;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n\nconst Popover: ComponentStyleConfig = {\n  baseStyle: {\n    content: {\n      padding: '4px 18px',\n      borderRadius: '4px',\n    },\n  },\n\n  variants: {\n    menu: {\n      popper: {\n        width: 'unset',\n        boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n      },\n      content: {\n        padding: '0',\n      },\n      body: {\n        padding: '0',\n      },\n    },\n  },\n};\n\nexport default Popover;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n\nconst Container: ComponentStyleConfig = {\n  baseStyle: {\n    maxWidth: '1280px',\n    paddingX: '0',\n  },\n};\n\nexport default Container;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n\nconst Table: ComponentStyleConfig = {};\n\nexport default Table;\n","import { ComponentStyleConfig } from '@chakra-ui/react';\n// import colors from '../colors';\n\nconst Modal: ComponentStyleConfig = {\n  baseStyle: {},\n  variants: {},\n  defaultProps: {},\n};\n\nexport default Modal;\n","import React, { FC, useEffect } from 'react';\nimport { Container, Flex } from '@chakra-ui/react';\nimport { globalStore } from 'rekv';\n// import { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n\nimport NavLink from '../navlink';\nimport ChangeLanguage from '../changeLanguage';\n// import { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Web3Com from '../web3';\nimport themes from '../../themes';\n\nexport interface HeaderProps {\n  sticky?: boolean;\n}\n\n// const formatAddress = (addr: string) => `${addr.slice(0, 4)}...${addr.slice(-4)}`;\n\nconst Header: FC<HeaderProps> = ({ sticky }) => {\n  const history = useHistory();\n  const { account, api } = globalStore.useState('account', 'api');\n  // const { t } = useTranslation();\n  useEffect(() => {\n    return () => {\n      // cleanup\n    };\n  }, [account?.address, api]);\n\n  return (\n    <Flex\n      as=\"header\"\n      flex={1}\n      justify=\"space-between\"\n      backgroundColor={themes.bgColor}\n      boxShadow=\"md\"\n      height=\"55px\"\n      px={8}\n      position={sticky ? 'fixed' : 'initial'}\n      top={0}\n      left={0}\n      right={0}\n    >\n      <Container display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex\n          justify=\"center\"\n          mr={8}\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          logo\n        </Flex>\n\n        <Flex flex=\"1 1 auto\">\n          <NavLink />\n        </Flex>\n\n        <Flex>\n          {/* <ColorModeSwitcher /> */}\n          {/* <ChangeLanguage /> */}\n          <Web3Com />\n        </Flex>\n      </Container>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Box, Flex } from '@chakra-ui/react';\n// import { useTranslation } from 'react-i18next';\n\nexport default function Footer() {\n  // const { t } = useTranslation('common');\n\n  return (\n    <Box as=\"footer\" flex={1} display=\"flex\" justifyContent=\"center\" height=\"auto\">\n      <Flex\n        display=\"flex\"\n        paddingX={6}\n        justifyContent=\"space-around\"\n        flexWrap=\"wrap\"\n        paddingBottom={5}\n      >\n        <Box maxW=\"80%\" minW=\"40%\" mt=\"60px\" mr=\"20px\"></Box>\n      </Flex>\n    </Box>\n  );\n}\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport XHR from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: (item: any) => {\n        if (item[0] === 'zh-CN') {\n          return `/locales/zh.json`;\n        }\n        return `/locales/en.json`;\n      },\n    },\n    react: {\n      useSuspense: true,\n    },\n    fallbackLng: 'en',\n    preload: ['en'],\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n    debug: true,\n  });\n\nexport default i18next;\nexport const t = i18next.t.bind(i18next);\n","import React, { ReactNode, Suspense } from 'react';\nimport { I18nextProvider } from 'react-i18next';\n\nimport i18n from '../../i18n';\n\n// fires a GA pageview every time the route changes\ntype ContainerProps = {\n  children: ReactNode;\n};\n\nconst Container = ({ children }: ContainerProps) => {\n  return (\n    <Suspense fallback=\"...\">\n      <I18nextProvider i18n={i18n}>{children}</I18nextProvider>\n    </Suspense>\n  );\n};\nexport default Container;\n","/* eslint-disable import/prefer-default-export */\nimport { QueryClient } from 'react-query';\n\n// 在着添加全局请求逻辑与配置，如 Headers\n// Add global request logic here, like adding headers\n// export const defaultQueryFn = async () => {\n//   //\n// }\n\nexport const queryClient = new QueryClient({\n  // 在这添加全局错误处理 Add error handling here\n  defaultOptions: {\n    // mutations: {\n\n    // },\n\n    queries: {\n      // retry: false,\n      // queryFn: defaultQueryFn\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n","import raf from 'rc-util/lib/raf';\n\nexport const isWindow = (obj: any) => {\n  return obj !== null && obj !== undefined && obj === obj.window;\n};\n\nexport const getScroll = (target: HTMLElement | Window | Document | null, top: boolean): number => {\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  const method = top ? 'scrollTop' : 'scrollLeft';\n  let result = 0;\n  if (isWindow(target)) {\n    result = (target as Window)[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target) {\n    result = (target as HTMLElement)[method];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = ((target as HTMLElement).ownerDocument || (target as Document)).documentElement[\n      method\n    ];\n  }\n  return result;\n};\n\nexport const easeInOutCubic = (t: number, b: number, c: number, d: number) => {\n  const cc = c - b;\n  // eslint-disable-next-line\n  t /= d / 2;\n  if (t < 1) {\n    return (cc / 2) * t * t * t + b;\n  }\n  // eslint-disable-next-line\n  return (cc / 2) * ((t -= 2) * t * t + 2) + b;\n};\n\ninterface ScrollToOptions {\n  /** Scroll container, default as window */\n  getContainer?: () => HTMLElement | Window | Document;\n  /** Scroll end callback */\n  callback?: () => any;\n  /** Animation duration, default as 450 */\n  duration?: number;\n}\n\ninterface ScrollToOptions {\n  /** Scroll container, default as window */\n  getContainer?: () => HTMLElement | Window | Document;\n  /** Scroll end callback */\n  callback?: () => any;\n  /** Animation duration, default as 450 */\n  duration?: number;\n}\n\nexport const scrollTo = (y: number, options: ScrollToOptions = {}) => {\n  const { getContainer = () => window, callback, duration = 450 } = options;\n  const container = getContainer();\n  const scrollTop = getScroll(container, true);\n  const startTime = Date.now();\n\n  const frameFunc = () => {\n    const timestamp = Date.now();\n    const time = timestamp - startTime;\n    const nextScrollTop = easeInOutCubic(time > duration ? duration : time, scrollTop, y, duration);\n    if (isWindow(container)) {\n      (container as Window).scrollTo(window.pageXOffset, nextScrollTop);\n    } else if (container instanceof HTMLDocument || container.constructor.name === 'HTMLDocument') {\n      (container as HTMLDocument).documentElement.scrollTop = nextScrollTop;\n    } else {\n      (container as HTMLElement).scrollTop = nextScrollTop;\n    }\n    if (time < duration) {\n      raf(frameFunc);\n    } else if (typeof callback === 'function') {\n      callback();\n    }\n  };\n  raf(frameFunc);\n};\n","import * as React from 'react';\nimport { HashRouter, Switch, Route, useLocation } from 'react-router-dom';\nimport { QueryClientProvider } from 'react-query';\nimport { globalStore } from 'rekv';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\n\nimport Home from './pages/home';\nimport NotFound from './pages/404';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport TranslateHOC from './components/translate';\nimport theme from './themes';\nimport './i18n';\n\nimport { queryClient } from './api/query';\nimport { scrollTo } from './utils/ui';\n\nrequire('dotenv').config();\n\nconst ControlledLayout = () => {\n  const location = useLocation();\n\n  // Scroll on top when route changes\n  React.useEffect(() => {\n    scrollTo(0);\n  }, [location.pathname, location.search]);\n\n  return (\n    <>\n      <Header sticky />\n      <Switch>\n        <Route exact strict path=\"/\" component={Home} />\n        <Route exact strict path=\"*\" component={NotFound} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nexport const App = () => (\n  <QueryClientProvider client={queryClient}>\n    <ChakraProvider theme={theme}>\n      <CSSReset />\n      <HashRouter>\n        <TranslateHOC>\n          <ControlledLayout />\n        </TranslateHOC>\n      </HashRouter>\n    </ChakraProvider>\n  </QueryClientProvider>\n);\n\nexport default {};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint-disable */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport themes from './themes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={themes.config.initialColorMode} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint-disable */\nimport * as ethUtil from 'ethereumjs-util';\nimport { IChainData } from './types';\nimport supportedChains from './chains';\n// import { apiGetGasPrices, apiGetAccountNonce } from \"./api\";\nimport { convertAmountToRawNumber, convertStringToHex } from './bignumber';\n\nexport function capitalize(string: string): string {\n  return string\n    .split(' ')\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\nexport function ellipseText(text: string = '', maxLength: number = 9999): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(' ')\n      .filter((word) => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(' ') + '...';\n  return result;\n}\n\nexport function ellipseAddress(address: string = '', width: number = 10): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === '0x' ? hex.substring(2) : hex;\n  if (hex === '') {\n    return '';\n  }\n  hex = hex.length % 2 !== 0 ? '0' + hex : hex;\n  return '0x' + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace('0x', '');\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = '';\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile: boolean = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent('TouchEvent');\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4),\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function getChainData(chainId: number): IChainData {\n  const chainData = supportedChains.filter((chain: any) => chain.chain_id === chainId)[0];\n\n  if (!chainData) {\n    throw new Error('ChainId missing or not supported');\n  }\n\n  const API_KEY = process.env.REACT_APP_INFURA_ID;\n\n  if (\n    chainData.rpc_url.includes('infura.io') &&\n    chainData.rpc_url.includes('%API_KEY%') &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY);\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl,\n    };\n  }\n\n  return chainData;\n}\n\nexport function hashPersonalMessage(msg: string): string {\n  const buffer = Buffer.from(msg);\n  const result = ethUtil.hashPersonalMessage(buffer);\n  const hash = ethUtil.bufferToHex(result);\n  return hash;\n}\n\nexport function recoverPublicKey(sig: string, hash: string): string {\n  const sigParams = ethUtil.fromRpcSig(sig);\n  const hashBuffer = Buffer.from(hash.replace('0x', ''), 'hex');\n  const result = ethUtil.ecrecover(hashBuffer, sigParams.v, sigParams.r, sigParams.s);\n  const signer = ethUtil.bufferToHex(ethUtil.publicToAddress(result));\n  return signer;\n}\n\nexport function recoverPersonalSignature(sig: string, msg: string): string {\n  const hash = hashPersonalMessage(msg);\n  const signer = recoverPublicKey(sig, hash);\n  return signer;\n}\n\n// export async function formatTestTransaction(address: string, chainId: number) {\n//   // from\n//   const from = address;\n\n//   // to\n//   const to = address;\n\n//   // nonce\n//   const _nonce = await apiGetAccountNonce(address, chainId);\n//   const nonce = sanitizeHex(convertStringToHex(_nonce));\n\n//   // gasPrice\n//   const gasPrices = await apiGetGasPrices();\n//   const _gasPrice = gasPrices.slow.price;\n//   const gasPrice = sanitizeHex(\n//     convertStringToHex(convertAmountToRawNumber(_gasPrice, 9))\n//   );\n\n//   // gasLimit\n//   const _gasLimit = 21000;\n//   const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\n\n//   // value\n//   const _value = 0;\n//   const value = sanitizeHex(convertStringToHex(_value));\n\n//   // data\n//   const data = \"0x\";\n\n//   // test transaction\n//   const tx = {\n//     from,\n//     to,\n//     nonce,\n//     gasPrice,\n//     gasLimit,\n//     value,\n//     data\n//   };\n\n//   return tx;\n// }\n\nexport function isObject(obj: any): boolean {\n  return typeof obj === 'object' && !!Object.keys(obj).length;\n}\n"],"sourceRoot":""}